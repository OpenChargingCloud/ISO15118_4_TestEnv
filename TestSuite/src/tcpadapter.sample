#include "runTC.h"
#include <time.h>
#include <regex>
#include "rapidjson/document.h"
#include "rapidjson/writer.h"
#include "rapidjson/stringbuffer.h"
#include "rapidjson/istreamwrapper.h"
#include <iostream>
#include <fstream>
#include <unordered_map>

int main(int argc, const char* argv[])
{
  Logging::LogCfg.value = LogAll_ENABLE;
  Logging::setLogLevel(LOG_DEBUG);
  Logging::setLogOutput(LOG_OUT_CONSOLE);
  std::shared_ptr<IfRuntime> runenv = std::make_shared<IfRuntime>();
  std::shared_ptr<TCPAdapter> tcp = std::make_shared<TCPAdapter>(runenv->getService());
  tcp->setSUTAddress("fe80::4a5:364:b976:b0a7", 9463, "eth0");
  if (tcp->connect() == false) {
    Logging::error(0, "Failed to connect to server");
    exit(1);
  }
  std::string line;
  while (getline(std::cin, line))
  {
      if (line.empty())
          break;

      // Send the entered text to the chat server
      tcp->sendAsync(line.c_str(), line.length());
  }
  tcp->disconnect();
}